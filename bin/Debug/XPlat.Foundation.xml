<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XPlat.Foundation</name>
    </assembly>
    <members>
        <member name="T:XPlat.Foundation.Collections.CollectionChange">
            <summary>Describes the action that causes a change to a collection.</summary>
        </member>
        <member name="F:XPlat.Foundation.Collections.CollectionChange.Reset">
            <summary>The collection is changed.</summary>
        </member>
        <member name="F:XPlat.Foundation.Collections.CollectionChange.ItemInserted">
            <summary>An item is added to the collection.</summary>
        </member>
        <member name="F:XPlat.Foundation.Collections.CollectionChange.ItemRemoved">
            <summary>An item is removed from the collection.</summary>
        </member>
        <member name="F:XPlat.Foundation.Collections.CollectionChange.ItemChanged">
            <summary>An item is changed in the collection.</summary>
        </member>
        <member name="T:XPlat.Foundation.Collections.IMapChangedEventArgs`1">
            <summary>Provides data for the changed event of a map collection.</summary>
            <typeparam name="K">The type of the keys in the map.</typeparam>
        </member>
        <member name="P:XPlat.Foundation.Collections.IMapChangedEventArgs`1.CollectionChange">
            <summary>Gets the type of change that occurred in the map.</summary>
        </member>
        <member name="P:XPlat.Foundation.Collections.IMapChangedEventArgs`1.Key">
            <summary>Gets the key of the item that changed.</summary>
        </member>
        <member name="T:XPlat.Foundation.Collections.IObservableMap`2">
            <summary>Notifies listeners of dynamic changes to a map, such as when items are added or removed.</summary>
            <typeparam name="K">The type of the keys in the map.</typeparam>
            <typeparam name="V">The type of the values in the map.</typeparam>
        </member>
        <member name="E:XPlat.Foundation.Collections.IObservableMap`2.MapChanged">
            <summary>Occurs when the map changes.</summary>
        </member>
        <member name="T:XPlat.Foundation.Collections.IPropertySet">
            <summary>Represents a property set, which is a set of PropertyValue objects with string keys.</summary>
        </member>
        <member name="M:XPlat.Foundation.Collections.IPropertySet.Get``1(System.String)">
            <summary>
            Gets a value from the set for the specified key as the specified type.
            </summary>
            <param name="key">
            The key to retrieve.
            </param>
            <typeparam name="T">
            The type of object expected.
            </typeparam>
            <returns>
            When complete, the method will return the value for the specified key as the specified type.
            </returns>
        </member>
        <member name="T:XPlat.Foundation.Collections.MapChangedEventHandler`2">
            <summary>Represents the method that handles the changed event of an observable map.</summary>
            <typeparam name="K">The type of the keys in the map.</typeparam>
            <typeparam name="V">The type of the values in the map.</typeparam>
            <param name="sender">The observable map that changed.</param>
            <param name="event">The description of the change that occurred in the map.</param>
        </member>
        <member name="P:XPlat.Foundation.Collections.StringMapChangedEventArgs.CollectionChange">
            <summary>Gets the type of change that occurred in the map.</summary>
        </member>
        <member name="P:XPlat.Foundation.Collections.StringMapChangedEventArgs.Key">
            <summary>Gets the key of the item that changed.</summary>
        </member>
        <member name="T:XPlat.Foundation.Size">
            <summary>Represents number values that specify a height and width.</summary>
        </member>
        <member name="T:XPlat.Foundation.TypedEventHandler`2">
            <summary>Represents a method that handles general events.</summary>
            <typeparam name="TSender">The object type.</typeparam>
            <typeparam name="TResult">The type of event data generated by the event.</typeparam>
            <param name="sender">The event source.</param>
            <param name="args">The event data. If there is no event data, this parameter will be null.</param>
        </member>
    </members>
</doc>
